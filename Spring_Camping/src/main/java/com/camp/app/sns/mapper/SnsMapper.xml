<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.camp.app.sns.mapper.SnsMapper">
<!-- 전체조회 -->
<select id="getSnsList" resultType="com.camp.app.sns.service.SnsVO">
SELECT * 
FROM sns 
where status = 2
order by write_no desc </select>

<!-- 페이징? -->
<select id="findByPage" resultType="SnsImageVO" parameterType="Integer">

<![CDATA[

      
      SELECT write_no, sns_image_no, origin_name, stored_name, sns_format, sns_size, sns_path
      FROM ( 
           SELECT SEQ, sns_image_no, origin_name, stored_name, sns_format, sns_size, sns_path, write_no
           FROM (
                SELECT ROWNUM AS SEQ, sns_image_no, origin_name, stored_name, sns_format, sns_size, sns_path, write_no
                FROM ( SELECT *
                            FROM sns_image 
                            WHERE sns_image_no = ANY
                                    (SELECT MIN(sns_image_no) 
                                    FROM sns_image
                                    WHERE write_no IN (SELECT write_no
                                                                FROM sns
                                                                WHERE status=2)
                                    GROUP BY write_no)
                            ORDER BY write_no desc)
               )
           WHERE SEQ >= ((#{page}-1)*10+1)
          )
      WHERE ROWNUM < 11
		]]>
</select>

<!-- 검색 : 해시태그 -->
<select id="getHashTag" resultType="String">SELECT hashtag from sns where status = 2 </select>

<!-- 검색 : 닉네임 -->
<select id="getNickName" resultType="String">SELECT nickname from member where status = 2</select>

<!-- 글 등록 텍스트1013 -->
<insert id="insertSns" parameterType="SnsVO">
	<selectKey resultType="Integer" keyProperty="writeNo" order="BEFORE">
		SELECT NVL(MAX(write_no),0)+1 FROM sns 
	</selectKey>
	INSERT INTO sns
	VALUES
	(
		#{writeNo},
		#{content},
		#{location},
		#{place},
		#{hashtag},
		SYSDATE,
		2,
		#{nickname},
		#{email},
		#{implement}
	) 
</insert>

<!-- 글 등록(이미지)1014 -->
<insert id="insertSnsImage" parameterType="SnsImageVO">
	INSERT INTO sns_image 
	VALUES
	(
		#{snsImageNo},
		#{originName},
		#{storedName},
		#{snsFormat},
		#{snsSize},
		#{snsPath},
		#{writeNo}
	) 
</insert>

<!-- 글 갯수 -->
<select id="count" resultType="Integer">
SELECT COUNT(*) FROM sns 
</select>

<!-- max 글 번호 -->
<select id="findMaxByWriteNo" resultType="Integer">
SELECT NVL(MAX(write_no),0) from sns
 </select>

<!-- max 이미지 번호 -->
<select id="findMaxBySnsImageNo" resultType="Integer">
SELECT NVL(MAX(sns_image_no),0) from sns_image 
</select>

<!-- sns 개별조회 - 텍스트 -->
<select id="findByWriteNo" resultType="SnsVO" parameterType="Integer">
SELECT * FROM sns WHERE write_no = #{writeNo} 
</select>

<!-- sns 개별조회 - 이미지 리스트 -->
<select id="findByWriteNoToSnsImage" resultType="SnsImageVO" parameterType="Integer">
SELECT * FROM sns_image WHERE write_no = #{writeNo} 
</select>

<!-- 단건 게시글 조회 -->


<!-- <select resultType="SnsVO" id="getSns" parameterType="Integer">
SELECT *FROM snsWHERE write_no = #{writeNo}
</select> -->


<!-- 글 수정 -->
<update id="snsUpdate" parameterType="SnsVO">
UPDATE sns
SET content = #{content},
location = #{location},
place = #{place},
hashtag = #{hashtag}
WHERE write_no = #{writeNo} 
</update>

<!-- 글 삭제(상태변경) -->
<update id="snsDelete" parameterType="Integer">
UPDATE sns
SET status = 1
WHERE write_no = #{writeNo} 
</update>

<!-- admin 글삭제(상태변경) -->
<update id="snsDeleteByAdmin" parameterType="Integer">
UPDATE sns
SET status = 0
WHERE write_no = #{writeNo} 
</update>



<!-- 마이페이지 -->
<!-- 유저가 작성한 총게시글 수 -->
<select id="countSnsByUser" resultType="Integer" parameterType="String">
	SELECT COUNT(*) FROM sns WHERE email = #{email} and status != 1
</select>

<!-- 페이징? -->
 <select id="showSnsByPageByUser" resultType="SnsImageVO" parameterType="MySnsVO">

<![CDATA[

      SELECT write_no, sns_image_no, origin_name, stored_name, sns_format, sns_size, sns_path
      FROM ( 
           SELECT SEQ, sns_image_no, origin_name, stored_name, sns_format, sns_size, sns_path, write_no
           FROM (
                SELECT ROWNUM AS SEQ, sns_image_no, origin_name, stored_name, sns_format, sns_size, sns_path, write_no
                FROM ( SELECT *
                            FROM sns_image 
                            WHERE sns_image_no = ANY
                                    (SELECT MAX(sns_image_no) 
                                    FROM sns_image
                                    WHERE write_no IN (SELECT write_no
                                                                FROM sns
                                                                WHERE status != 1  and email = #{email})
                                                       
                                    GROUP BY write_no)
                            ORDER BY write_no desc)
               )
           WHERE SEQ >= ((#{page}-1)*10+1)
          )
      WHERE ROWNUM < 11
     
		]]>
</select> 

<!-- 좋아요한 페이지 모아보기 -->
<!-- count는 saveMapper에 있음 -->

<!-- 해시태그 검색한 이미지리스트 -->
<!-- 페이징? -->
 <select id="showSnsByPageByHashtag" resultType="SnsImageVO" parameterType="SnsHashtagVO">
<![CDATA[
      SELECT write_no, sns_image_no, origin_name, stored_name, sns_format, sns_size, sns_path
      FROM ( 
           SELECT SEQ, sns_image_no, origin_name, stored_name, sns_format, sns_size, sns_path, write_no
           FROM (
                SELECT ROWNUM AS SEQ, sns_image_no, origin_name, stored_name, sns_format, sns_size, sns_path, write_no
                FROM ( SELECT *
                            FROM sns_image 
                            WHERE sns_image_no = ANY
                                    (SELECT MAX(sns_image_no) 
                                    FROM sns_image
                                    WHERE write_no IN (SELECT write_no
                                                                FROM sns
                                                                WHERE status=2  and hashtag like '%'||#{hashtag}||'%')
                                    GROUP BY write_no)
                            ORDER BY write_no desc)
               )
           WHERE SEQ >= ((#{page}-1)*10+1)
          )
      WHERE ROWNUM < 11
		]]>
</select> 
</mapper>