<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.camp.app.recruEntry.mapper.EntryMapper">
	
	<!-- 등록 -->
	<insert id="insertEntry" parameterType="EntryVO">
		<selectKey keyProperty="entryId" resultType="Integer" order="BEFORE">
			SELECT NVL(MAX(entry_id),0)+1 FROM recru_entry
		</selectKey>
		INSERT INTO recru_entry(
			entry_id,
			recru_id,
			entry_car,
			entry_gear,
			member_id,
			nickname
		)
		VALUES(
			#{entryId}
			,#{recruId}
			,#{entryCar}
			,#{entryGear}
			,#{memberId}
			,#{nickname}
		)
	</insert>
	
	<!-- 모집글의 참가자 조회 -->
	<select id="recruEnteredList" parameterType="Integer" resultType="EntryVO">
		SELECT *
		FROM recru_entry
		WHERE recru_id=#{recruId}
	</select>
	
	<!-- 현재 수락중인 참가자 수  -->
	<select id="recruEnteredNum" parameterType="EntryVO" resultType="Integer">
		SELECT count(*)
		FROM recru_entry
		WHERE recru_id=#{recruId}
		AND entry_status=#{entryStatus}
	</select>
	
	<!-- 마이페이지 전체조회 - 페이징 -->
	<select id="myEntryList" parameterType="EntryVO" resultType="EntryVO">
		SELECT B.* 
		FROM (SELECT CEIL(ROWNUM/12) page, A.* 
			  FROM(SELECT e.*, r.recru_status
					FROM recru_entry e
                    JOIN recruitment r
                    ON(e.recru_id = r.recru_id)
					WHERE e.member_id= #{memberId}) A ) B 
		WHERE page = #{pageNum}
	</select>
	
	<!-- 종료된 참가 목록(보증금관련) -->
	<select id="endEntryList" parameterType="String" resultType="EntryVO">
		SELECT DISTINCT e.recru_id, e.entry_status,r.recru_title, r.recru_content, r.go_date, r.come_date, r.recru_status, r.status
			FROM recru_entry e JOIN recruitment r
			ON (e.recru_id = r.recru_id)
			where (e.member_id= #{member_id} OR r.member_id=#{member_id})
			AND r.recru_status IN (1,3)
	</select>
	
	<!-- 동행신청 상태수정  -->
	<update id="updateEntryStatus"  parameterType="EntryVO">
		update recru_entry 
		set entry_status= #{entryStatus}
		where entry_id=#{entryId}
	</update>
</mapper>