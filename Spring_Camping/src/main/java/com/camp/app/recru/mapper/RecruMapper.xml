<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.camp.app.recru.mapper.RecruMapper">
	<!-- 신규 글 번호 찾기 수정후 삭제-->
	<select id="getMaxRecruId" resultType="Integer">
		SELECT NVL(MAX(recru_id),0) FROM recruitment
	</select>
	<!-- 입력 -->
	<insert id="insertRecru" parameterType="RecruVO">
		<selectKey keyProperty="recruId" resultType="Integer" order="BEFORE">
			SELECT NVL(MAX(recru_id),0)+1 FROM recruitment
		</selectKey>
		INSERT INTO recruitment(
				recru_id
				,member_id
				,recru_title
				<if test="recruContent !=null">
				,recru_content
				</if>
				<if test="wishAge !=null">
				,wish_age
				</if>
				,wish_sex
				,car_yn	
				<if test="myGear !=null">
				,my_gear	
				</if>
				<if test="needGear !=null">
				,need_gear	
				</if>
				,go_date	
				,come_date	
				,starting_point	
				,camping_point	
				<if test="noteId !=null">
				,note_id	
				</if>
				,recru_num	
				,closing_date
				,nickname	
				)
			VALUES(
				#{recruId}
				,#{memberId}
				,#{recruTitle}
				<if test="recruContent !=null">
				,#{recruContent}
				</if>
				<if test="wishAge !=null">
				,#{wishAge}
				</if>
				,#{wishSex}
				,#{carYn}
				<if test="myGear !=null">
				,#{myGear}
				</if>
				<if test="needGear !=null">
				,#{needGear}
				</if>
				,#{goDate}
				,#{comeDate}
				,#{startingPoint}
				,#{campingPoint}
				<if test="noteId !=null">
				,#{noteId}
				</if>
				,#{recruNum}
				,#{closingDate}
				,#{nickname}
		)
	</insert>
	
<!-- 전체조회 -->
	<!--<select id="findAll" resultType ="RecruVO">
		SELECT * FROM recruitment
	</select> -->

	<!-- 전체조회 - 페이징 -->
	<select id="findAllPaging" parameterType="RecruVO" resultType ="RecruVO">
		SELECT B.* 
		FROM (SELECT CEIL(ROWNUM/48) page, A.* 
			  FROM( SELECT * FROM recruitment 
				  <where>
					  <if test="memberRole!=3">
					  	status=0
					  </if>
				  </where>
                  	ORDER BY recru_id desc) A ) B 
		WHERE page = #{pageNum}
	</select>
	
	<!-- 검색조회 -->
	<select id="findKeyword" parameterType="RecruVO" resultType="RecruVO">
		SELECT B.* 
		FROM (SELECT CEIL(ROWNUM/48) page, A.* 
			  FROM(SELECT * FROM recruitment
			<where>
				1=1
				<if test="memberRole!=3">
				  	AND status=0 
				</if>
				<if test="keyword != ''">
					AND (recru_title LIKE '%'||#{keyword}||'%'
					OR recru_content LIKE '%'||#{keyword}||'%'
					OR my_gear LIKE '%'||#{keyword}||'%'
					OR need_gear LIKE '%'||#{keyword}||'%'
					OR camping_point LIKE '%'||#{keyword}||'%')
				</if>
			</where> 
				) A ) B 
		WHERE page = #{pageNum}
		
		
	</select>
	
	<!-- 단건조회 -->
	<select id="selectOne" parameterType="Integer" resultType="RecruVO">
		SELECT * FROM recruitment
		WHERE recru_id = #{ recruId }
	</select>
	
	<!-- 마이페이지 조회 -->
	<select id="myRecru" parameterType="String" resultType="RecruVO">
		SELECT * FROM recruitment
		WHERE member_id = #{ memberId }
	</select>

	<!-- 수정 : 글 수정 -->
	<update id="updateRecru" parameterType="recruVO">
		UPDATE recruitment SET recru_title = #{recruTitle}
		                    ,recru_content = #{recruContent}
		                    ,wish_age = #{wishAge}
		                    ,wish_sex = #{wishSex}
		                    ,car_yn = #{carYn}
		                    ,my_gear=#{myGear}
		                    ,need_gear = #{needGear}
		                    ,go_date = #{goDate}
		                    ,come_date = #{comeDate}
		                    ,starting_point = #{startingPoint}
		                    ,camping_point = #{campingPoint}
		                    ,note_id = #{noteId}
		                    ,recru_num= #{recruNum}
		                    ,closing_date = #{closingDate}
		WHERE recru_id = #{recruId}
	</update>
	
	<!-- 수정 : 접근상태변경 -->
	<update id="changeShowStatus" parameterType="RecruVO">
		UPDATE recruitment 
		   SET status = #{status}
		 WHERE recru_id = #{recruId}
	</update> 
	
	<!-- 수정 : 모집상태변경 -> 모집 완료로 상태변경시(1) 보증금 추가 -->
	<update id="changeStatus" parameterType="RecruVO">
		<selectKey keyProperty="depositId" resultType="Integer" order="BEFORE">
			SELECT NVL(MAX(deposit_id),0)+1 FROM deposit
		</selectKey>
		DECLARE
		BEGIN
		    UPDATE recruitment 
		    SET recru_status = #{recruStatus}
		    WHERE recru_id = #{recruId};
		<if test="recruStatus==1">
		    INSERT INTO deposit ( 
								deposit_id, 
								recru_id, 
								member_id 
								)
						VALUES( 
		                        #{depositId},
		                        #{recruId},
		                        #{memberId}
		                        );
		</if>
		END;
	</update>

	<select id="findImgByRecruId" parameterType="Integer" resultType="RecruImgVO">
		SELECT * FROM recru_image WHERE recru_id = #{recruId}
	</select>
	
	<!-- 모임에 참가한 사람들 목록(모집자+신청자) -->
	<select id="findRecruMembers" parameterType="Integer" resultType="RecruVO">
		SELECT recru_id, member_id, nickname
		FROM(	select recru_id, member_id
		        from recruitment 
		        WHERE recru_id=3
		        UNION
		        select recru_id, member_id
		        from recru_entry
		        WHERE recru_id= #{recruId}
		        ) a
		JOIN member b
		ON (a.member_id = b.email)
	</select>
	
	<!-- 후기 등록 -->
	<insert id="insertReview" parameterType="RecruVO">
		<selectKey keyProperty="reviewId" resultType="Integer" order="BEFORE">
				SELECT NVL(MAX(review_id),0)+1 FROM recru_review
		</selectKey>
		INSERT INTO recru_review VALUES(
										#{reviewId},
										#{recruId},
										#{memberId},
										#{reviewTarget},
										#{reviewGrade},
										#{reviewContent}
										)
	</insert>
	
	<!-- 캠핑장 검색 -->
	<select id="searchCamp" parameterType="CampVO" resultType="CampVO">
		SELECT camp_id, camp_name, camp_address FROM  camp
		<where>
			<if test="region != null">
				camp_address LIKE '%'||#{region}||'%'
			</if>
			<if test="campName != null">
				camp_name LIKE '%'||#{campName}||'%'
			</if>
		</where> 
		
	</select>
	
</mapper>